version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: pm_postgres
    environment:
      POSTGRES_DB: project_management
      POSTGRES_USER: pm_user
      POSTGRES_PASSWORD: pm_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - pm_network

  # Keycloak OIDC Provider
  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    container_name: pm_keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin123
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: pm_user
      KC_DB_PASSWORD: pm_password
      KC_HOSTNAME: localhost
      KC_HTTP_ENABLED: true
    command: start-dev
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    networks:
      - pm_network

  # FastAPI Backend
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: pm_backend
    environment:
      DATABASE_URL: postgresql://pm_user:pm_password@postgres:5432/project_management
      KEYCLOAK_URL: http://keycloak:8080
      KEYCLOAK_REALM: project-management
      KEYCLOAK_CLIENT_ID: pm-backend
      KEYCLOAK_CLIENT_SECRET: your-client-secret
    depends_on:
      - postgres
      - keycloak
    ports:
      - "8000:8000"
    volumes:
      - ../backend:/app
    networks:
      - pm_network

  # React Frontend
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: pm_frontend
    environment:
      REACT_APP_API_URL: http://localhost:8000
      REACT_APP_KEYCLOAK_URL: http://localhost:8080
      REACT_APP_KEYCLOAK_REALM: project-management
      REACT_APP_KEYCLOAK_CLIENT_ID: pm-frontend
    depends_on:
      - backend
    ports:
      - "3000:3000"
    volumes:
      - ../frontend:/app
      - /app/node_modules
    networks:
      - pm_network

  # NGINX Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: pm_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
      - keycloak
    networks:
      - pm_network

volumes:
  postgres_data:

networks:
  pm_network:
    driver: bridge